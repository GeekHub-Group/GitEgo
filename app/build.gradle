apply plugin: 'com.android.application'

android {
  compileSdkVersion androidBuildCompileSDKVersion
  buildToolsVersion androidBuildToolsVersion

  defaultConfig {
    applicationId "com.hrules.gitego"
    minSdkVersion androidBuildMinSDKVersion
    targetSdkVersion androidBuildTargetSDKVersion
    versionCode appVersionCode
    versionName appVersionName

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    // GitHub API
    Properties gitHubSecretProps = new Properties()
    gitHubSecretProps.load(new FileInputStream(new File('github.secrets.properties')))

    buildConfigField "String", "GITHUB_API_CLIENTID",
        "\"" + gitHubSecretProps['GITHUB_API_CLIENTID'] + "\""
    buildConfigField "String", "GITHUB_API_SCOPES",
        "\"" + gitHubSecretProps['GITHUB_API_SCOPES'] + "\""
    buildConfigField "String", "GITHUB_API_CLIENTSECRET",
        "\"" + gitHubSecretProps['GITHUB_API_CLIENTSECRET'] + "\""
    buildConfigField "String", "GITHUB_API_CALLBACKURL",
        "\"" + gitHubSecretProps['GITHUB_API_CALLBACKURL'] + "\""
    resValue "string", "GITHUB_API_CALLBACKURL",
        "\"" + gitHubSecretProps['GITHUB_API_CALLBACKURL'] + "\""
  }

  signingConfigs {
    release {
      Properties appSecretProps = new Properties()
      appSecretProps.load(new FileInputStream(new File('app.secrets.properties')))

      keyAlias appSecretProps['APP_RELEASE_KEYALIAS']
      keyPassword appSecretProps['APP_RELEASE_KEYPASSWORD']
      storeFile file(appSecretProps['APP_RELEASE_STOREFILE'])
      storePassword appSecretProps['APP_RELEASE_STOREPASSWORD']
    }
  }

  buildTypes {
    debug {
      resValue 'string', 'app_name', '"GitEgo-debug"'
      debuggable true
      minifyEnabled false
      zipAlignEnabled false
      applicationIdSuffix ".debug"
    }

    release {
      resValue 'string', 'app_name', '"GitEgo"'
      minifyEnabled false
      signingConfig signingConfigs.release
    }
  }

  testOptions {
    unitTests {
      returnDefaultValues = true
    }
  }
}

configurations.all {
  resolutionStrategy {
    force supportDependencies.supportAnnotations
  }
}

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])

  // test
  androidTestCompile testDependencies.runner
  testCompile testDependencies.junit

  // support
  supportDependencies.each {
    add("compile", it.value)
  }

  // project
  projectDependencies.each {
    add("compile", it.value)
  }

  // other
  otherDependencies.each {
    add("annotationProcessor", it.value)
  }

  // debug build
  debugDependencies.each {
    add("debugCompile", it.value)
  }
}
